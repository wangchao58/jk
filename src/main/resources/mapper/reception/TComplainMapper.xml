<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.mapper.reception.TComplainMapper" >
  <resultMap id="BaseResultMap" type="com.jk.entity.reception.TComplain" >
    <id column="t_id" property="tId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="concate" property="concate" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="avatarurl" property="avatarurl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >

    </where>
  </sql>

  <sql id="Base_Column_List" >
    t_id, user_id, concate, create_time
  </sql>

  <sql id="TComplainList" >
    c.t_id, c.user_id, c.concate, c.create_time, p.nickname as nickname, p.avatarurl as avatarurl
  </sql>

  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jk.entity.reception.TComplainExample" >
    select
    <include refid="TComplainList" />
    from t_complain c
    left join t_personage p
    on c.user_id = p.t_id
    order by create_time desc
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_complain
    where t_id = #{tId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_complain
    where t_id = #{tId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.jk.entity.reception.TComplain" >
    insert into t_complain (t_id, user_id, concate, create_time
      )
    values (#{tId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{concate,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jk.entity.reception.TComplain" >
    insert into t_complain
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tId != null" >
        t_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="concate != null" >
        concate,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tId != null" >
        #{tId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="concate != null" >
        #{concate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.entity.reception.TComplain" >
    update t_complain
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="concate != null" >
        concate = #{concate,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where t_id = #{tId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.entity.reception.TComplain" >
    update t_complain
    set user_id = #{userId,jdbcType=VARCHAR},
        concate = #{concate,jdbcType=VARCHAR},
        create_time = #{createTime,jdbcType=VARCHAR}
    where t_id = #{tId,jdbcType=VARCHAR}
  </update>
</mapper>